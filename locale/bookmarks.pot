# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012 - 2018, The phpMyAdmin devel team
# This file is distributed under the same license as the phpMyAdmin package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: phpMyAdmin 5.0.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-21 00:00+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../phpmyadmin/doc/bookmarks.rst:4
msgid "Bookmarks"
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:8
msgid "You need to have configured the :ref:`linked-tables` for using bookmarks feature."
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:12
msgid "Storing bookmarks"
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:14
msgid "Any query you have executed can be stored as a bookmark on the page where the results are displayed. You will find a button labeled :guilabel:`Bookmark this query` just at the end of the page. As soon as you have stored a bookmark, it is related to the database you run the query on. You can now access a bookmark dropdown on each page, the query box appears on for that database."
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:22
msgid "Variables inside bookmarks"
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:24
msgid "You can also have, inside the query, placeholders for variables. This is done by inserting into the query SQL comments between ``/*`` and ``*/``. Inside the comments, the special strings ``[VARIABLE{variable-number}]`` is used. Be aware that the whole query minus the SQL comments must be valid by itself, otherwise you won't be able to store it as a bookmark. Note also that the text 'VARIABLE' is case-sensitive."
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:31
msgid "When you execute the bookmark, everything typed into the *Variables* input boxes on the query box page will replace the strings ``/*[VARIABLE{variable-number}]*/`` in your stored query."
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:35
msgid "Also remember, that everything else inside the ``/*[VARIABLE{variable-number}]*/`` string for your query will remain the way it is, but will be stripped of the ``/**/`` chars. So you can use:"
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:43
msgid "which will be expanded to"
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:49
msgid "in your query, where VARIABLE1 is the string you entered in the Variable 1 input box."
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:51
msgid "A more complex example. Say you have stored this query:"
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:58
msgid "Say, you now enter \"phpMyAdmin\" as the variable for the stored query, the full query will be:"
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:65
msgid "**NOTE THE ABSENCE OF SPACES** inside the ``/**/`` construct. Any spaces inserted there will be later also inserted as spaces in your query and may lead to unexpected results especially when using the variable expansion inside of a \"LIKE ''\" expression."
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:71
msgid "Browsing table using bookmark"
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:73
msgid "When bookmark is named same as table, it will be used as query when browsing this table."
msgstr ""

#: ../phpmyadmin/doc/bookmarks.rst:78
msgid ":ref:`faqbookmark`, :ref:`faq6_22`"
msgstr ""

